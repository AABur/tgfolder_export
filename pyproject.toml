[project]
name = "tgfolder_export"
version = "0.1.0"
description = "Export Telegram folder contents as JSON"
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "AABur" }]
requires-python = ">=3.11"
dependencies = ["python-dotenv", "telethon", "tqdm"]

[project.optional-dependencies]
dev = ["mypy", "ruff", "types-pyyaml", "types-tqdm", "pytest", "pytest-cov", "pytest-mock"]

[project.scripts]
tgfolder_export = "export:main"

[tool.ruff]
target-version = "py311"
line-length = 88
extend-exclude = ["var"]

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "UP",    # pyupgrade
    "SIM",   # flake8-simplify
    "A",     # flake8-builtins
    "ARG",   # flake8-unused-arguments
    "C90",   # mccabe complexity
    "ICN",   # flake8-import-conventions
    "N",     # pep8-naming
    "PL",    # pylint
    "PTH",   # flake8-use-pathlib
    "Q",     # flake8-quotes
    "RET",   # flake8-return
    "RUF",   # Ruff-specific rules
    "S",     # flake8-bandit
    "T20",   # flake8-print
    "TCH",   # flake8-type-checking
    "TID",   # flake8-tidy-imports
]
ignore = [
    "E501",    # line too long, handled by formatter
    "S101",    # Use of assert detected (ok in tests)
    "T201",    # print found (we use print intentionally for output)
    "PLR0913", # Too many arguments to function call
    "SIM112",  # Use capitalized environment variables (we keep lowercase for consistency)
    "PTH123",  # Use pathlib Path.open() (overkill for simple file operations)
]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["S101", "ARG001", "PLR2004"]  # Allow assert, unused args, magic values in tests

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pylint]
max-args = 7

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true


[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_column_numbers = true
pretty = true
error_summary = true

[[tool.mypy.overrides]]
module = ["telethon.*", "dotenv.*"]
ignore_missing_imports = true

[tool.coverage.run]
source = ["export"]
branch = true
omit = [
    "test_*.py",
    "*_test.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2
fail_under = 85

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--tb=short",
]
testpaths = ["."]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
